plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

apply plugin: 'java'

sourceCompatibility = '11'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

javafx {
    version = "20"
    modules = [ 'javafx.controls' ]
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.sergehelfrich.ersa.demo.ErsaDemo'
}

mainClassName = 'eu.sergehelfrich.ersa.demo.ErsaDemo'




tasks.named('jar') {
    exclude('eu/sergehelfrich/ersa/demo/**')
    description = 'Assembles the library JAR without the demo sources.'
}

tasks.register('demoJar', Jar) {
    group = 'build'
    description = 'Assembles an executable JAR that contains the demo application.'
    archiveClassifier = 'demo'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    dependsOn tasks.named('classes')

    from sourceSets.main.output
    manifest {
        attributes 'Main-Class': mainClassName
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
  testLogging.showStandardStreams = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
}
